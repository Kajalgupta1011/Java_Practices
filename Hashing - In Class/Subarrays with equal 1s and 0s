Subarrays with equal 1s and 0s
Medium

Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Given an array arr[] of size N containing 0s and 1s only. The task is to count the subarrays having an equal number of 0s and 1s.
Input
The first line of the input contains an integer N denoting the size of the array and the second line contains N space-separated 0s and 1s.

Constraints:-
1 <= N <= 10^6
0 <= A[i] <= 1
Output
For each test case, print the count of required sub-arrays in new line.
Example
Sample Input
7
1 0 0 1 0 1 1

Sample Output
8

The index range for the 8 sub-arrays are:
(0, 1), (2, 3), (0, 3), (3, 4), (4, 5)
(2, 5), (0, 5), (1, 6)
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Main {
	static long countSubarr(long arr[], int n)
	{
		HashMap<Long, Integer> map = new HashMap<>();
		long sum = 0;
		long count = 0;
		for (int i = 0; i < n; i++) {
			// Replacing 0's in array with -1
			if (arr[i] == 0)
				arr[i] = -1;
			sum += arr[i];
			if (sum == 0)
				count++;

			if (map.containsKey(sum))
				count += map.get(sum);

			if (!map.containsKey(sum))
				map.put(sum, 1);
			else
				map.put(sum, map.get(sum) + 1);
		}
		return count;
	}

	public static void main(String[] args)
	{
 		//int arr[] = { 1, 0, 0, 1, 0, 1, 1 };
 		Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        long arr[] = new long[n];
	    for(int k = 0; k < n; k++){
	        arr[k] = sc.nextInt();
	    }
		System.out.println(countSubarr(arr, n));
	}
}
