Kill Avengers
Medium

Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
In a new plot by Hydra to kill the avengers, Doctor Zola comes up with a new form of poison composed of chromosomes A, C, T and G. The poison is a string of length n (where n is divisible by 4) with each of the four letters occurring exactly n/4 times. For example, GACT and AAGTGCCT are both fatal poisons.Help Doctor Zolaâ€™s plan by choosing one (maybe empty) substring of minimal length in given poision and replace it with the new string (containing A,T,G,C) to make that poison fatal quickly.
Input
The first line of input contains a single integer N. The next line of input contains a string S of size N.

Constraints:-
1 <= N <= 100000

Note:- N is divisible by 4 and S will only contain {A, G, C, T}
Output
Print the length of the minimum length substring that can be replaced to detect the poison as fatal.
Example
Sample Input:-
8
GAAATAAA

Sample Output:-
5

Explanation:-
ATAAA can be replaced to TTCCG to get a fatal poison

Sample Input:-
4
AAAA

Sample Output:-
3

---------------------------------------------------------------
---------------------------------------------------------------
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static boolean checkOcc(int cnt[], int occ){
		int a = cnt['A' - 'A'];
		int t = cnt['T' - 'A'];
		int g = cnt['G' - 'A'];
		int c = cnt['C' - 'A'];

		if(a > occ || t > occ || g > occ || c > occ)
			return false;

		return true;
	}
	public static boolean findFatal(String str, int len){
		int cnt[] = new int[26];

		for(int i = 0; i < str.length(); i++){
			char ch = str.charAt(i);
			cnt[ch - 'A']++;
		}

		for(int i = 0; i < len; i++){
			char ch = str.charAt(i);
			cnt[ch - 'A']--;
		}
		int s = 0, e = len;
		while(e != str.length()){
			if(checkOcc(cnt, str.length() / 4))
				return true;

			char ch = str.charAt(s);
			cnt[ch - 'A']++;

			ch = str.charAt(e);
			cnt[ch - 'A']--;

			s++; e++;
		}
		return false;
	}

	public static void main (String[] args) {
		
        Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		sc.nextLine();
		String str = sc.nextLine();

		int s = 0, e = n;
		int ans = 0;

		while(s < e){
			int m = (s + e) / 2;

			if(findFatal(str, m)){
				e = m;
				ans = m;
			}else{
				s = m + 1;
			}
		}
		System.out.println(ans);
	}
}
