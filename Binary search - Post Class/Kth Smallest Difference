Kth Smallest Difference
Hard

Time Limit: 2 sec
Memory Limit: 128000 kB

Problem Statement
You are given an array of integers. Consider absolute difference between all the pairs of the the elements. You need to find Kth smallest absolute difference. If the size of the array is N then value of K will be less than N and more than or equal to 1.

Input
The first line of input contains number of test cases T.
The first line of each test case contains a two integers N and K denoting the number of elements in the array A and difference you need to output. The second line of each test case contains N space separated integers denoting the elements of the array A

Constraints:
1<= T <= 10
2 <= N <= 100000
1 <= K < N < 100000
0 <= A[i] <= 100000

Output
For each test case, output Kth smallest absolute difference.

Example
Input :
1
6 2
1 3 4 1 3 8

Output :
0

Explanation :
Test case 1: First smallest difference is 0, between the pair (1, 1) and second smallest absolute difference difference is also 0 between the pairs (3, 3).

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework
class Main {
	public static int sliding(int diff, int[]arr, int n){
		//it tells how many pairs have absolute diff <=diff
		int j=0;
		
		int count=0;
		for(int i=1; i<n; i++){
		while(arr[i]-arr[j] >diff) j++;

		count += i-j;  // else arr[i]-arr[j] <=diff
		}

		return count;
	}
	public static void find(int[]arr, int n, int k){
		Arrays.sort(arr);
		int high = arr[n-1] - arr[0];            // max - min in arr
		int low = Integer.MAX_VALUE;
	
		for(int i=1; i<n; i++){
		if(arr[i]-arr[i-1]<low) low= arr[i]-arr[i-1];
			}
			while(low < high){

				int mid =(low + high)/2;
				//mid is diff array mid

			int ans = sliding( mid , arr,n); //mid=5
	//it tells how many pairs have absolute difference less than or equal to 5

	          if(ans < k) // 4pairs < 5 we want 5th small diff
			  low = mid + 1;
			  else high = mid;
			}
			System.out.println(low);
	}



	public static void main (String[] args) throws IOException {
		
	InputStreamReader s = new InputStreamReader(System.in);
		BufferedReader br = new BufferedReader(s);
					  int t = Integer.parseInt(br.readLine());
		while(t>0){
			String input[] = br.readLine().split(" ");
			int n = Integer.parseInt(input[0]);
			int k = Integer.parseInt(input[1]);
			int arr[] = new int[n];
			String input2[] = br.readLine().split(" ");
			for(int i=0; i<n; i++) arr[i]=Integer.parseInt(input2[i]);
			
			find(arr,n,k);
			t--;
		}
	}
}
