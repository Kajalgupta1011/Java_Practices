First non- repeating character in a String
Easy

Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Given a string s, find the first non- repeating character in the string and return its index. If it does not exist, return -1.
Input
First line of the input contains the string s.

Constraints
1<= s. length <= 100000
Output
Print the index of the first non- repeating character in a string
Example
Input
s = "newtonschool"

Output
1

Explanation
"e" is the first non- repeating character in a string
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static char Str(String s){
    
	Set <Character> hs = new HashSet <Character>();
	List <Character> nr = new ArrayList <Character>();
	
	for(int i=0; i<s.length(); i++){
       
         char letter = s.charAt(i);

		 if(hs.contains(letter)){
			 continue;
		 }
		 if(nr.contains(letter)){
            nr.remove((Character) letter);
			hs.add(letter);
		 }
		 else{
            nr.add(letter);
		 }
	  }

	  if(nr.isEmpty() == true) return '@' ;
	  else
	  	return nr.get(0);
	  
	}
	public static void main (String[] args) {
    // Your code here
	Scanner sc = new Scanner(System.in);
	String s = sc.nextLine();
	char ch = Str(s);

	if(ch == '@')
		System.out.println("-1");
	else{
		int posiIdx = s.indexOf(ch);
		System.out.println(posiIdx);
	}

	}
}
